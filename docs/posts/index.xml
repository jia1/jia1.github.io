<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jiayee.net</title>
    <link>https://jiayee.net/posts/</link>
    <description>Recent content in Posts on Jiayee.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Thu, 20 Jul 2023 23:09:00 +0800</lastBuildDate><atom:link href="https://jiayee.net/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Installing Postgres on macOS</title>
      <link>https://jiayee.net/2023/07/installing-postgres-on-macos/</link>
      <pubDate>Thu, 20 Jul 2023 23:09:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2023/07/installing-postgres-on-macos/</guid>
      <description>Before this, the last time I installed a Postgres database on my local machine was years ago. I wished I found Sami Korpela&amp;rsquo;s blog post sooner. It had everything I needed:
# macOS Ventura Terminal brew install postgresql@15 echo &amp;#39;export PATH=&amp;#34;/opt/homebrew/opt/postgresql@15/bin:$PATH&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.zshrc source ~/.zshrc brew services start postgresql createuser -s postgres psql postgres # or psql -U your_username -d your_database ### postgres=# ### \l # List databases \du # List roles \c your_database # Connect to database \c your_database other_username # Connect to database as other_username \d # List relations (tables) </description>
    </item>
    
    <item>
      <title>Create React App environment variables</title>
      <link>https://jiayee.net/2023/07/create-react-app-environment-variables/</link>
      <pubDate>Sat, 15 Jul 2023 14:44:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2023/07/create-react-app-environment-variables/</guid>
      <description>I worked on React codebases for years. For various reasons, I never had to deal with client-side environment variables.
I first saw environment variable prefixes in Next.
Unfortunately, it took me a while to realise that this concept also applied to create-react-app.
As a result, I spent some time wondering why my environment variables were not replaced at build time. I started to think it was because they were replaced during runtime.</description>
    </item>
    
    <item>
      <title>Don&#39;t catch everything</title>
      <link>https://jiayee.net/2023/06/dont-catch-everything/</link>
      <pubDate>Sat, 24 Jun 2023 23:23:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2023/06/dont-catch-everything/</guid>
      <description>I did a catch when I didn&amp;rsquo;t need to. I defined the catch clause for an API request which should return a rejected Promise upon failure. As a result, the toast which indicated failure didn&amp;rsquo;t appear.
In this commit, I removed the catch clause.
And in another commit, I defined what failure is.
While writing about this, I wondered if there could be a better way to express identical requirements. A quick search led me to this Stack Overflow thread - throw (but not in AngularJS).</description>
    </item>
    
    <item>
      <title>Push vs Pull CDN</title>
      <link>https://jiayee.net/2023/04/push-vs-pull-cdn/</link>
      <pubDate>Wed, 12 Apr 2023 12:46:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2023/04/push-vs-pull-cdn/</guid>
      <description>It was only recently that I realised that there was more than one way to update the content that your CDN hosts. Since, to the best of my knowledge, Cloudflare was the closest thing to a CDN, I thought all CDN would work like that. Couldn&amp;rsquo;t be more wrong.
I like that Cloudflare is so hassle-free to set up. It caches my site upon request + nothing in cache. There is no need to push any content to Cloudflare by myself.</description>
    </item>
    
    <item>
      <title>react-hook-form validations</title>
      <link>https://jiayee.net/2023/04/react-hook-form-validations/</link>
      <pubDate>Wed, 12 Apr 2023 00:12:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2023/04/react-hook-form-validations/</guid>
      <description>Feeling a little abashed about leaving a bug unresolved for the day, but I want a break and keep the team posted. And I also want to share what I&amp;rsquo;ve learnt. However, if you know what&amp;rsquo;s the problem with my commit, please don&amp;rsquo;t hesitate to reach out!
Back to the main learning point I&amp;rsquo;m trying to share: In the pull request above, look at the first screenshot. The first screenshot was supposed to depict a form field that has gone through the validation function despite being untouched.</description>
    </item>
    
    <item>
      <title>Read Sheets in Java</title>
      <link>https://jiayee.net/2023/03/read-sheets-in-java/</link>
      <pubDate>Sun, 26 Mar 2023 21:55:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2023/03/read-sheets-in-java/</guid>
      <description>If you need to programmatically read a Google spreadsheet in Java, the quickstart guide describes a class that does configuration, scoping and reading all in one. However, if you use Spring Boot, you would want to split it into configuration and service layers:
// build.gradle ... dependencies { ... compile (&amp;#39;com.google.api-client:google-api-client&amp;#39;) compile (&amp;#39;com.google.apis:google-api-services-sheets&amp;#39;) ... } ... // Spring Boot // Your config layer should contain the Sheets bean: // Copied from: https://stackoverflow.</description>
    </item>
    
    <item>
      <title>Reuse Stories When Testing</title>
      <link>https://jiayee.net/2023/03/reuse-stories-when-testing/</link>
      <pubDate>Sun, 26 Mar 2023 21:06:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2023/03/reuse-stories-when-testing/</guid>
      <description>My volunteering experience at an open source project led me to appreciate Storybook. Developing frontend components in isolation makes me happy. Unexpected behaviour is localised, and you are appropriately enticed to write your components better. By better, I meant modular. Modularity encourages simplicity (think SRP), and this makes code more reusable and self-documenting. There&amp;rsquo;s no greater joy than not having to explain your code.
But wait, there&amp;rsquo;s more: If you think writing stories is exclusive to your Storybook instance and thus a pain to write, think again.</description>
    </item>
    
    <item>
      <title>react-hook-form</title>
      <link>https://jiayee.net/2023/03/react-hook-form/</link>
      <pubDate>Sat, 25 Mar 2023 12:35:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2023/03/react-hook-form/</guid>
      <description>It&amp;rsquo;s been a while since I last had the chance to assess several libraries to solve parts of a problem. My most recent project required me to evaluate JavaScript libraries which make form management a breeze. The &amp;ldquo;me&amp;rdquo; in the past would have jumped at any first possibility, like how a chick imprints on the first living thing they see. Not anymore.
My ex-company taught me to set up decision tables and make recommendations according to concrete criteria and their priorities.</description>
    </item>
    
    <item>
      <title>Anew</title>
      <link>https://jiayee.net/2023/03/anew/</link>
      <pubDate>Thu, 23 Mar 2023 23:30:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2023/03/anew/</guid>
      <description>As you may have already known, my (soon-to-be ex-)company decided for me to pursue a new career elsewhere. I didn&amp;rsquo;t want to believe this - my body accepted it faster than my mind could. My body moved like clockwork - I proceeded to update my resume. My resume was in shambles. It looked lacklustre. As I documented my notable accomplishments line by line, my resume brightened a lot. It brightened like how replacing an incandescent bulb with an LED one felt.</description>
    </item>
    
    <item>
      <title>Core React Training Day 2</title>
      <link>https://jiayee.net/2022/04/core-react-training-day-2/</link>
      <pubDate>Wed, 27 Apr 2022 22:00:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2022/04/core-react-training-day-2/</guid>
      <description>Day 2 was a continuation of our understanding of the useEffect hook. Some of concepts mentioned were concepts I &amp;ldquo;felt&amp;rdquo; while getting my hands dirty. The workshop was a conducive environment to make these concepts known to me more.
Some keywords, libraries or links of interest: usehooks-ts eslint-plugin-react-hooks React lifecycle diagrams The dependency array in useEffect does diffs by identity. For primitives, we diff by value. For objects, we diff by memory location.</description>
    </item>
    
    <item>
      <title>Core React Training Day 1</title>
      <link>https://jiayee.net/2022/04/core-react-training-day-1/</link>
      <pubDate>Tue, 26 Apr 2022 21:10:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2022/04/core-react-training-day-1/</guid>
      <description>I&amp;rsquo;m thankful to be able to attend a React training workshop organised by my company. I&amp;rsquo;ve been using React in my job but this workshop made me realise I still have lots to learn.
The exercises were very manageable. I learnt the most from the instructor&amp;rsquo;s detailed explanation of how React works:
Babel is not part of React but it was helpful to know how Babel makes our lives easier by parsing JSX.</description>
    </item>
    
    <item>
      <title>File Upload to Spring Boot</title>
      <link>https://jiayee.net/2021/12/file-upload-to-spring-boot/</link>
      <pubDate>Fri, 10 Dec 2021 13:30:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2021/12/file-upload-to-spring-boot/</guid>
      <description>Implementing file uploads through GraphQL was something I never managed to succeed in. Got embroiled in type incompatibilities. And eventually, I gave up and implemented a separate but simple API endpoint just for file uploads.
So here&amp;rsquo;s the design: The user clicks &amp;ldquo;Submit&amp;rdquo;. The files get uploaded first. Upon upload, the server returns IDs. And the rest of the form data plus the returned IDs are sent to the GraphQL endpoint.</description>
    </item>
    
    <item>
      <title>Spring Boot Interceptors</title>
      <link>https://jiayee.net/2021/02/spring-boot-interceptors/</link>
      <pubDate>Thu, 11 Feb 2021 20:57:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2021/02/spring-boot-interceptors/</guid>
      <description>A neat trick to log HTTP requests and responses in a Spring Boot project is through interceptors. To log requests and responses between the client and the server, I use the HandlerInterceptor (Introduction to Spring MVC HandlerInterceptor).
To create this interceptor, simply extend the HandlerInterceptor interface. By overriding the various methods available, you can intercept the request and/or response at different points of time. For example, preHandle is executed before the request is executed (i.</description>
    </item>
    
    <item>
      <title>Truncating Strings With CSS</title>
      <link>https://jiayee.net/2020/12/truncating-strings-with-css/</link>
      <pubDate>Fri, 04 Dec 2020 21:19:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/12/truncating-strings-with-css/</guid>
      <description>A few days ago, I wouldn&amp;rsquo;t have realised truncating strings by number of lines with CSS was possible. I was beginning to sweat when I received a request to truncate strings by number of lines instead of number of characters. To be fair, only SWEs would think of truncating by number of characters instead of line numbers&amp;hellip;
My teammate shared an answer he found at CSS-Tricks. If I recall, it didn&amp;rsquo;t work out for me because of the way the containers were styled.</description>
    </item>
    
    <item>
      <title>Reach Router Match</title>
      <link>https://jiayee.net/2020/12/reach-router-match/</link>
      <pubDate>Fri, 04 Dec 2020 21:10:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/12/reach-router-match/</guid>
      <description>I use Reach Router. I&amp;rsquo;ve a component which isn&amp;rsquo;t a child of Router, so it does not have the useLocation hook. But I need to access the current URL in that component. Here&amp;rsquo;s how I did it after seeing Jacek&amp;rsquo;s hint:
&amp;lt;div&amp;gt; &amp;lt;Match path=&amp;#34;/*&amp;#34;&amp;gt; {(props) =&amp;gt; ( &amp;lt;MyComponent path=&amp;#34;/*&amp;#34; match={props.match ?? &amp;#39;&amp;#39;} /&amp;gt; )} &amp;lt;/Match&amp;gt; &amp;lt;Router&amp;gt; ... &amp;lt;/Router&amp;gt; &amp;lt;/div&amp;gt; interface Props { match: any; } export const MyComponent: FC&amp;lt;Props&amp;gt; = (props: Props) =&amp;gt; { const pathname = props.</description>
    </item>
    
    <item>
      <title>Numerical IDs in MongoDB</title>
      <link>https://jiayee.net/2020/12/numerical-ids-in-mongodb/</link>
      <pubDate>Fri, 04 Dec 2020 20:27:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/12/numerical-ids-in-mongodb/</guid>
      <description>Auto-generated IDs in MongoDB are &amp;ldquo;strange&amp;rdquo; strings. I quote &amp;ldquo;strange&amp;rdquo; because they are actually derived not out of nowhere despite looking like they had nothing to do with anything. But to users, these IDs are strange.
I had a collection of documents with a name property. Originally, name was annotated with @Id. But it meant that I couldn&amp;rsquo;t change the value of name. name was also annotated with regex validation (@Pattern(.</description>
    </item>
    
    <item>
      <title>Abstract classes and AOP</title>
      <link>https://jiayee.net/2020/11/abstract-classes-and-aop/</link>
      <pubDate>Tue, 17 Nov 2020 21:30:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/11/abstract-classes-and-aop/</guid>
      <description>I wanted to avoid writing boilerplate code for CRUD in Spring Boot. But I failed - I couldn&amp;rsquo;t make my child aspect get along with my child controller. Before adopting AOP, I had an abstract controller which the child controller inherited. CRUD worked well and I no longer needed to repeat the code for simple CRUD anymore. I was happy.
// MyAbstractController public abstract class MyAbstractController&amp;lt;T extends UniversalModel&amp;gt; { private final .</description>
    </item>
    
    <item>
      <title>Super Thinking Chapter 01</title>
      <link>https://jiayee.net/2020/11/super-thinking-chapter-01/</link>
      <pubDate>Sun, 15 Nov 2020 22:40:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/11/super-thinking-chapter-01/</guid>
      <description>Being Wrong Less Inverse thinking. Instead of thinking how you can save money, think about how you can reduce your expenses. Unforced error. A personal shortcoming which can be controlled. Anti-fragile. Treating setbacks as challenges and thriving on them. Keep it simple, stupid! Arguing from first principles. De-risking. Challenging assumptions and verifying or debunking them. Premature optimisation. Minimum viable product. Ockham&amp;rsquo;s razor. &amp;ldquo;The simplest explanation is usually the right one.&amp;rdquo; Conjunction fallacy.</description>
    </item>
    
    <item>
      <title>Sticky</title>
      <link>https://jiayee.net/2020/11/sticky/</link>
      <pubDate>Wed, 11 Nov 2020 20:43:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/11/sticky/</guid>
      <description>I found myself entangled in CSS. I needed app-header to stick to the top at all times. I also needed template-header to be right beneath app-header at all times. Lastly, embedded-content should begin immediately after template-header and shouldn&amp;rsquo;t be sticky. Here&amp;rsquo;s how the page organisation might look like:
&amp;lt;div class=&amp;#34;app&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;app-header&amp;#34;&amp;gt; &amp;lt;!-- Content --&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;app-content&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;template-container&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;template-header&amp;#34;&amp;gt; &amp;lt;!-- Content --&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;embedded-content&amp;#34;&amp;gt; &amp;lt;!-- Content --&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; The simplest approach is to place app-header and template-header inside a single div.</description>
    </item>
    
    <item>
      <title>reCaptcha on-error</title>
      <link>https://jiayee.net/2020/11/recaptcha-on-error/</link>
      <pubDate>Mon, 09 Nov 2020 18:20:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/11/recaptcha-on-error/</guid>
      <description>Polling wasn&amp;rsquo;t effective because:
Hot reloading didn&amp;rsquo;t happen because of some heap limit error. I called the wrong function to check if the reCaptcha errored. To deal with the heap limit, my buddy suggested updating the docker-dev script in package.json to:
{ &amp;#34;scripts&amp;#34;: { &amp;#34;docker-dev&amp;#34;: &amp;#34;export NODE_OPTIONS=\&amp;#34;--max-old-space-size=4096\&amp;#34; &amp;amp;&amp;amp; ...&amp;#34; } } As for checking if the reCaptcha errored, neither on-expire nor captchaService.isValid worked. A possible explanation for the former would be that the reCaptcha didn&amp;rsquo;t expire.</description>
    </item>
    
    <item>
      <title>Reaping the Benefits</title>
      <link>https://jiayee.net/2020/11/reaping-the-benefits/</link>
      <pubDate>Thu, 05 Nov 2020 18:23:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/11/reaping-the-benefits/</guid>
      <description>Section 3: &amp;ldquo;Reaping the Benefits&amp;rdquo; This section connects better listening and information management to better decision-making and benefits that can span entire organisations.
Chapter 12: &amp;ldquo;Connecting Better Listening to Better Judgment&amp;rdquo; Learning from others and constantly reconstructing ideas leads to discoveries and insights.
Chapter 13: &amp;ldquo;Changing Your Organisation through Listening&amp;rdquo; &amp;ldquo;Foster a more disciplined and productive organisation.&amp;rdquo; The example raised was the organisation of organisation-wide meetings. In these meetings, speakers need to be well-prepared and adhere to strict requirements.</description>
    </item>
    
    <item>
      <title>Sorting the Chaos</title>
      <link>https://jiayee.net/2020/11/sorting-the-chaos/</link>
      <pubDate>Tue, 03 Nov 2020 20:04:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/11/sorting-the-chaos/</guid>
      <description>Section 2: &amp;ldquo;Sorting the Chaos&amp;rdquo; This section breaks down information from general business problems into suggested components. It also lists the questions to ask ourselves so that we remain focused and productive.
Suggested information compartments:
Mandate Plan Team Execution Personal Chapter 7: &amp;ldquo;What Is the Mandate?&amp;rdquo; &amp;ldquo;Why are we here?&amp;rdquo; (Vision, mission, agenda, etc.) So that we don&amp;rsquo;t lose track and get mesmerised by less important things &amp;ldquo;Are there any misalignments?</description>
    </item>
    
    <item>
      <title>Power Listening by Bernard T Ferrari</title>
      <link>https://jiayee.net/2020/10/power-listening-by-bernard-t-ferrari/</link>
      <pubDate>Fri, 30 Oct 2020 15:54:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/power-listening-by-bernard-t-ferrari/</guid>
      <description>I&amp;rsquo;ve been borrowing ebooks from NLB ever since I bought my Kobo. I find it difficult to listen in Zoom meetings, so I hope to learn something from this book named &amp;ldquo;Power Listening&amp;rdquo; by Bernard T. Ferrari. I also have difficulty remembering things, so I summarised my takeaways below. I recommend reading the book and penning down notes so that you can appreciate the art of listening based on real-world examples and remember what you need to do to be a good listener.</description>
    </item>
    
    <item>
      <title>pip uninstall All</title>
      <link>https://jiayee.net/2020/10/pip-uninstall-all/</link>
      <pubDate>Wed, 28 Oct 2020 22:06:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/pip-uninstall-all/</guid>
      <description>I found a one-liner which can uninstall all pip packages:
pip3 freeze | grep -v &amp;#34;^-e&amp;#34; | xargs sudo pip3 uninstall -y I used to do the following:
pip3 freeze &amp;gt; reqs.txt sudo pip3 uninstall -r reqs.txt I didn&amp;rsquo;t realise I could do pip uninstall -r reqs.txt -y and get rid of those confirmation questions. And I&amp;rsquo;m pretty sure I messed up the actual requirements file at least once when adopting this approach.</description>
    </item>
    
    <item>
      <title>Some Git</title>
      <link>https://jiayee.net/2020/10/some-git/</link>
      <pubDate>Tue, 27 Oct 2020 20:51:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/some-git/</guid>
      <description>I didn&amp;rsquo;t realise my pull request was between branches of the same repository. Not sure if my friend realised. I moved the feature branch&amp;rsquo;s latest updates to my fork&amp;rsquo;s feature branch. I then made another pull request. I used the following commands to straighten things out:
# Create a local branch with the same name as the origin remote feature branch git checkout -b feat/simple-compound-interest-calculators # Pull in the changes from the origin remote git pull # Set the upstream to the origin remote feature branch git branch --set-upstream-to=origin/feat/simple-compound-interest-calculators feat/simple-compound-interest-calculators # Check the remotes and their URLs git remote -v # Add the remote for my fork git remote add jiayee git@github.</description>
    </item>
    
    <item>
      <title>Constants</title>
      <link>https://jiayee.net/2020/10/constants/</link>
      <pubDate>Mon, 19 Oct 2020 22:30:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/constants/</guid>
      <description>I thought consolidating constants was evil. Just two or three dozens of them were enough to become a huge headache for me. In Java, this practice is frowned upon. In JavaScript, it seemed alright.
The answer which received the bounty recommended the following:
// Warning: This answer was written in 2014. module.exports = Object.freeze({ MY_CONSTANT: &amp;#39;some value&amp;#39;, ANOTHER_CONSTANT: &amp;#39;another value&amp;#39; }); It was my first time encountering Object.freeze, so I went to google for the difference between Object.</description>
    </item>
    
    <item>
      <title>Captcha isValid()</title>
      <link>https://jiayee.net/2020/10/captcha-isvalid/</link>
      <pubDate>Sun, 18 Oct 2020 19:30:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/captcha-isvalid/</guid>
      <description>I needed the client to check for the captcha failure when a user loads a form. In the captchaService abstraction for angular-recaptcha, there was isValid() which does:
/** * Check if the response has been set, assuming captcha is enabled. */ this.isValid = () =&amp;gt; this.response || !this.enabled; I had a way to trigger the captcha failure. In the same WiFi network, I accessed a form from localhost through my mobile phone.</description>
    </item>
    
    <item>
      <title>Some Similarities</title>
      <link>https://jiayee.net/2020/10/some-similarities/</link>
      <pubDate>Thu, 15 Oct 2020 19:11:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/some-similarities/</guid>
      <description>This
.some-class { display: flex; flex-direction: column; justify-content: center; min-height: 20rem; } and this
.some-class { display: flex; align-items: center; min-height: 20rem; } appear the same to me.
CSS-Tricks says,
You can think of align-items as the justify-content version for the cross-axis (perpendicular to the main-axis).</description>
    </item>
    
    <item>
      <title>Redux Poof!</title>
      <link>https://jiayee.net/2020/10/redux-poof/</link>
      <pubDate>Thu, 15 Oct 2020 19:00:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/redux-poof/</guid>
      <description>I was at Page A. Page A calls an API and stores the response in the Redux store. After some clicking, I was routed to Page B. I expected to retrieve the API response stored by Page A. But it wasn&amp;rsquo;t there! The culprit was &amp;lt;a href ...&amp;gt;. I should be using Link or navigate(...) instead.
When I refreshed Page B after getting there via Link, the store went poof again.</description>
    </item>
    
    <item>
      <title>Center</title>
      <link>https://jiayee.net/2020/10/center/</link>
      <pubDate>Wed, 14 Oct 2020 18:04:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/center/</guid>
      <description>Why &amp;ldquo;Center&amp;rdquo; instead of &amp;ldquo;Centre&amp;rdquo;? Well, that&amp;rsquo;s because &amp;ldquo;center&amp;rdquo; is the version used in CSS.
There were moments in my life when I wanted to give up writing in British English. There are so many other people using American English&amp;hellip; except for me. Programming languages are expressed using American English as well. I felt like a rebel for naming my variables in British English, but that&amp;rsquo;s what I&amp;rsquo;ve learnt in school.</description>
    </item>
    
    <item>
      <title>Javascript heap limit</title>
      <link>https://jiayee.net/2020/10/javascript-heap-limit/</link>
      <pubDate>Tue, 13 Oct 2020 19:11:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/javascript-heap-limit/</guid>
      <description>For the past week, I couldn&amp;rsquo;t fathom why my diffs seemed to not be on hot reload. It turned out to be a JavaScript heap limit problem. As a result, the codebase didn&amp;rsquo;t rebuild and remained stale. This issue does not happen to everyone. I&amp;rsquo;m using a MacBook Air (13-inch, 2017) with 8 GB of RAM.
Notice the line above the last which says, FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory.</description>
    </item>
    
    <item>
      <title>redux-persist</title>
      <link>https://jiayee.net/2020/10/redux-persist/</link>
      <pubDate>Thu, 08 Oct 2020 22:36:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/redux-persist/</guid>
      <description>If you need your Redux store to last beyond a page load or refresh, look no further! redux-persist is here to the rescue. Based on this guide and this guide, you need to update your reducers and store to enjoy persistence:
Install redux-persist:
yarn add redux-persist @types/redux-persist Update root reducer and store:
// Copied from the official README and edited import { Provider } from &amp;#39;react-redux&amp;#39;; import { createStore, Store } from &amp;#39;redux&amp;#39;; import { persistReducer, persistStore } from &amp;#39;redux-persist&amp;#39;; import storage from &amp;#39;redux-persist/lib/storage&amp;#39;; import rootReducer from &amp;#39;.</description>
    </item>
    
    <item>
      <title>Challenges of a multi-step flow with permalinks</title>
      <link>https://jiayee.net/2020/10/challenges-of-a-multi-step-flow-with-permalinks/</link>
      <pubDate>Wed, 07 Oct 2020 22:50:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/challenges-of-a-multi-step-flow-with-permalinks/</guid>
      <description>I decided to invest my time into covering the edge cases that were not handled by Design #1. Refer to yesterday&amp;rsquo;s post for the context. The edge cases are:
Forms which need data from the preceding forms Dynamic form links I can deal with the first pain point by leveraging query parameters. A persistent Redux store is not needed (yet). A persistent Redux store is one which persists between page loads and refreshes.</description>
    </item>
    
    <item>
      <title>String.format equivalent in TypeScript</title>
      <link>https://jiayee.net/2020/10/string.format-equivalent-in-typescript/</link>
      <pubDate>Wed, 07 Oct 2020 22:50:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/string.format-equivalent-in-typescript/</guid>
      <description>While working on a problem during work, I thought I needed a way to do a String.format equivalent operation in TypeScript (it turns out I didn&amp;rsquo;t need to). I didn&amp;rsquo;t want to install Lodash (50 kB for _.template alone) or sprintf (40 kB), so I came up with the following:
// Warning: Untested code export const compileTemplate = (template: string, values: Map&amp;lt;string, string&amp;gt;) =&amp;gt; { const variables = Array.from(values.keys()).map(key =&amp;gt; &amp;#39;:&amp;#39; + key).</description>
    </item>
    
    <item>
      <title>Multi-step forms</title>
      <link>https://jiayee.net/2020/10/multi-step-forms/</link>
      <pubDate>Tue, 06 Oct 2020 21:48:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/multi-step-forms/</guid>
      <description>I&amp;rsquo;ve a few pages which I need to chain into a single form flow. I also need to display a progress bar at the top of each form. I need to do some rearchitecting. Reasons:
If we don&amp;rsquo;t do anything, we will need to insert &amp;lt;ProgressBar .../&amp;gt; and the like into every form component. Sharing the forms/pages across other flows which don&amp;rsquo;t need the progress bar is difficult. The form flow will become more obscure.</description>
    </item>
    
    <item>
      <title>Polling</title>
      <link>https://jiayee.net/2020/10/polling/</link>
      <pubDate>Mon, 05 Oct 2020 23:00:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/polling/</guid>
      <description>There were instances where users filled up a time-consuming form but couldn&amp;rsquo;t submit it because of reCaptcha failure. Users ended up having to refresh and re-populate the form. That&amp;rsquo;s some harsh user experience. My team uses a forked version of angular-recaptcha. I located the controller, directive and template for the form. I attached a recursive $timeout at the controller and the directive, but as of now, I&amp;rsquo;ve not gotten them to work.</description>
    </item>
    
    <item>
      <title>Calculator V2</title>
      <link>https://jiayee.net/2020/10/calculator-v2/</link>
      <pubDate>Sun, 04 Oct 2020 22:32:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/calculator-v2/</guid>
      <description>I made some changes to my compound interest calculator after reading up on &amp;ldquo;future value&amp;rdquo;. My calculator will allow users to specify regular deposits. This is so that they can see for themselves the importance of every dollar added to their savings.
import nerdamer from &amp;#39;nerdamer/nerdamer.core&amp;#39;; import Algebra from &amp;#39;nerdamer/Algebra&amp;#39;; import Calculus from &amp;#39;nerdamer/Calculus&amp;#39;; import Solve from &amp;#39;nerdamer/Solve&amp;#39;; const totalMonthsPerYear = 12; export const calcCompoundInterest = ({ principal, depositAmountPerMonth = 0, interestRatePerAnnum, compoundRatePerMonth = 1, totalMonths, }) =&amp;gt; { const totalAmount = solveForOneUnknownVariable( &amp;#39;a=(p*(1+(r/n))^(n*t))+(q*(((1+(r/n))^(n*t)-1)/(r/n)))&amp;#39;, { p: principal.</description>
    </item>
    
    <item>
      <title>Quick Go 3</title>
      <link>https://jiayee.net/2020/10/quick-go-3/</link>
      <pubDate>Thu, 01 Oct 2020 21:02:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/quick-go-3/</guid>
      <description>Chapter 5 and 6 were about basic data structures (like arrays, slices and maps) and functions.
package main import &amp;#34;fmt&amp;#34; func main() { // Chapter 5: Arrays, slices and maps var x [5]int x[4] = 100 fmt.Println(x) // No coercing when there is a division operation involving a float64 and int // i.e. (mismatched types float64 and int) // Should do a / float64(b) var total float64 = 0 for i, value := range x { total += value } // Different from Python&amp;#39;s range // Compiler will complain &amp;#34;i declared and not used&amp;#34;, so we must rename unused variables to &amp;#39;_&amp;#39;.</description>
    </item>
    
    <item>
      <title>TypeScript Shortcuts</title>
      <link>https://jiayee.net/2020/10/typescript-shortcuts/</link>
      <pubDate>Thu, 01 Oct 2020 19:01:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/typescript-shortcuts/</guid>
      <description>TL;DR: I learnt how to (invert a map) and (copy a map and override the values of the copy) in TypeScript. Ctrl+F TYPESCRIPT_SHORTCUT_1 and TYPESCRIPT_SHORTCUT_2 to get to the code.
Context: Yesterday, I didn&amp;rsquo;t invest time into inverting a TypeScript Map&amp;lt;string, string&amp;gt;. Today, I received feedback that I should extract the encode logic into a function of its own. I decided to put in more effort.
Here&amp;rsquo;s the new original code:</description>
    </item>
    
    <item>
      <title>CryptoJS and URL</title>
      <link>https://jiayee.net/2020/09/cryptojs-and-url/</link>
      <pubDate>Wed, 30 Sep 2020 19:17:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/cryptojs-and-url/</guid>
      <description>Like this Stack Overflow thread, I needed to encrypt some string which will become part of a URL. However, there was a slash in one of the encrypted strings, like c3ViamVjdHM/X2Q9MQ==. Feel free to decode this. It&amp;rsquo;s something I copied from the internet.
I thought there would be a lot of symbols in the Base64 alphabet at first (I was wrong). I didn&amp;rsquo;t want to deal with them and set up a giant substitution map, like a Map&amp;lt;string, string&amp;gt;.</description>
    </item>
    
    <item>
      <title>Quick Go 2</title>
      <link>https://jiayee.net/2020/09/quick-go-2/</link>
      <pubDate>Wed, 30 Sep 2020 12:14:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/quick-go-2/</guid>
      <description>Chapter 3 and 4 were about variables (var, const and so on) and control structures (for, if and so on).
package main import &amp;#34;fmt&amp;#34; b := &amp;#34;Hello, world!&amp;#34; // Block scope func main() { // Chapter 3: Variables var x string = &amp;#34;Hello, world!&amp;#34; var y string y = &amp;#34;Hello, world!&amp;#34; // x = x + y // x += y z := &amp;#34;Hello, world!&amp;#34; var a = &amp;#34;Hello, world!&amp;#34; fmt.</description>
    </item>
    
    <item>
      <title>JSLT</title>
      <link>https://jiayee.net/2020/09/jslt/</link>
      <pubDate>Tue, 29 Sep 2020 18:22:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/jslt/</guid>
      <description>I&amp;rsquo;ve a GraphQL service and a Spring Boot application. The latter consumes the former. In the application, I transform the retrieved JSON with the help of JSLT. Today, I wrote a JSLT program to do de-duplication and array intersection. Below is the context:
My GraphQL query:
query MyQuery(...) { arrayA: someModel(...) { someInnerModel { id } }, arrayB: someModel(...) { someInnerModel { id } } } Expected JSON response from GraphQL service:</description>
    </item>
    
    <item>
      <title>Quick Go 1</title>
      <link>https://jiayee.net/2020/09/quick-go-1/</link>
      <pubDate>Mon, 28 Sep 2020 22:43:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/quick-go-1/</guid>
      <description>It was a busy weekend for me. Last Saturday, I went out to catch up with my friends, and I went shopping for an ebook reader. Last Sunday, I cycled with my in-laws and played computer games. On both days, I travelled by public transport, so a couple of hours went into travelling too. Over the weekend, I also had to set up my ebook reader. Besides my HumbleBundle books, I borrowed some books from NLB via OverDrive.</description>
    </item>
    
    <item>
      <title>Writing Calculators</title>
      <link>https://jiayee.net/2020/09/writing-calculators/</link>
      <pubDate>Fri, 25 Sep 2020 21:23:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/writing-calculators/</guid>
      <description>My friends needed an interest calculator. For the simple interest calculator, the parameters are:
The principal (P), Annual interest rate (r), Number of months (t), and An optional parameter to represent a periodic top-up amount. Here&amp;rsquo;s v1 of my simple interest calculator:
/** * Calculates simple interest. * * Uses the formula A = P(1 + rt). * * @param {Object} param Object containing parameters. * @param {Number} param.principal Principal amount.</description>
    </item>
    
    <item>
      <title>Dynamic Tooltips</title>
      <link>https://jiayee.net/2020/09/dynamic-tooltips/</link>
      <pubDate>Fri, 25 Sep 2020 14:55:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/dynamic-tooltips/</guid>
      <description>I had a tooltip for a switch which contained 2 lines of text. The first line of the tooltip shows how users can fill the textarea field nearby. The second line reminds users to meet certain prerequisites before filling the field. My GovTech OSS buddy suggested shortening the tooltip depending on user interaction.
At first, the tooltip looked like:
&amp;lt;i class=&amp;#34;...&amp;#34; uib-tooltip=&amp;#34;Here&amp;#39;s the one and only static tooltip!&amp;#34; tooltip-trigger=&amp;#34;&amp;#39;click mouseenter&amp;#39;&amp;#34; &amp;gt;&amp;lt;/i&amp;gt; uib-tooltip seems to come from UI Bootstrap.</description>
    </item>
    
    <item>
      <title>Intercepting Angular Data Binding</title>
      <link>https://jiayee.net/2020/09/intercepting-angular-data-binding/</link>
      <pubDate>Wed, 23 Sep 2020 21:40:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/intercepting-angular-data-binding/</guid>
      <description>I&amp;rsquo;ve two form switches. Let&amp;rsquo;s call them A and B. I had to program them such that:
When A is off, disable and switch B off. When A is on, disable and switch B off. We can ignore backend logic because I programmed it such that if A is off, ignore B.
So, how did I solve this? I intercepted the data binding with a directive. This may not be the best solution, but it was so convenient and intuitive to me!</description>
    </item>
    
    <item>
      <title>Data Wrangling</title>
      <link>https://jiayee.net/2020/09/data-wrangling/</link>
      <pubDate>Tue, 22 Sep 2020 21:14:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/data-wrangling/</guid>
      <description>I managed to catch one of the NUS Hackers&amp;rsquo; workshops, &amp;ldquo;Hacker Tools: Data Wrangling&amp;rdquo; by Julius. I got to learn many new things since I don&amp;rsquo;t use CLI for text processing. Julius&amp;rsquo; slides are in his GitHub repo.
Below is a very brief and dry summary of what is more important to me. If I &amp;ldquo;miss&amp;rdquo; something out, it&amp;rsquo;s likely because I remembered it before. This summary does no justice to the workshop, but I want to write them down here before I forget.</description>
    </item>
    
    <item>
      <title>Style Fixes 1</title>
      <link>https://jiayee.net/2020/09/style-fixes-1/</link>
      <pubDate>Sun, 20 Sep 2020 16:26:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/style-fixes-1/</guid>
      <description>I discovered there were some unexpected styles for &amp;lt;code&amp;gt; and &amp;lt;pre&amp;gt; in this site. This is due to Foundation&amp;rsquo;s default styles. The inline code style was fine, but the same style applied to code blocks (i.e. &amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;...&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;), and that was not fine. There was also insufficient margin and padding for the code blocks. I inspected the &amp;lt;code&amp;gt; elements. I found out that Foundation was the culprit. It has been styling the &amp;lt;code&amp;gt; elements on top of what Hugo has in store.</description>
    </item>
    
    <item>
      <title>First Lighthouse Report for Jiayee.net</title>
      <link>https://jiayee.net/2020/09/first-lighthouse-report-for-jiayee.net/</link>
      <pubDate>Sat, 19 Sep 2020 18:34:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/first-lighthouse-report-for-jiayee.net/</guid>
      <description>I ran my first Lighthouse report on this site. There&amp;rsquo;s a bunch of improvements to make. As of now, I managed to resolve some of them. I put up the links to the before and after Lighthouse reports at the end of this post. Please feel free to take a look at them.
A summary of the improvements I made:
Include lang attribute to the html element i.e. &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;. Added rel=&amp;quot;noopener&amp;quot; to external links.</description>
    </item>
    
    <item>
      <title>New Theme</title>
      <link>https://jiayee.net/2020/09/new-theme/</link>
      <pubDate>Sat, 19 Sep 2020 12:20:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/new-theme/</guid>
      <description>Hello to my new theme! Indeed&amp;rsquo;s &amp;ldquo;You Day&amp;rdquo; was yesterday, and I spent the day redesigning this site. I&amp;rsquo;m very pleased with the result. I was able to follow my hand-drawn wireframe to produce this theme. While this is a simple theme, I made sure to consider these things:
Little clutter Consistent margin between sections. The margin was 2rem between sections and 1rem between post metadata and content. Only 3 font sizes (Foundation&amp;rsquo;s h1, h3 and h5) Only 3 colours (background colour: #F5F5F5, font colour: #333333 and dark turquoise: #26867C) Reduction of eye strain with lower contrast of colours Colour-blind friendly Through this experience, I gained more exposure to Hugo and Foundation.</description>
    </item>
    
    <item>
      <title>No qualifying bean</title>
      <link>https://jiayee.net/2020/09/no-qualifying-bean/</link>
      <pubDate>Thu, 17 Sep 2020 15:23:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/no-qualifying-bean/</guid>
      <description>In one of my previous posts, I avoided auto-configuring primitives. Otherwise, the No qualifying bean error will occur. Today, I couldn&amp;rsquo;t avoid that anymore. I had to auto-configure a boolean so that the consumer can enable or disable a feature in application.yml.
So, how did I resolve this issue? I used @Value(&amp;quot;{someKey:someDefault}&amp;quot;) final boolean someFlag in the caller constructor.
Before that, I tried attaching only @Bean to the getter, but it didn&amp;rsquo;t work out.</description>
    </item>
    
    <item>
      <title>Internship Thursdays</title>
      <link>https://jiayee.net/2020/09/internship-thursdays/</link>
      <pubDate>Wed, 16 Sep 2020 21:52:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/internship-thursdays/</guid>
      <description>Last week, I had the honour to be one of the panellists for NUS CFG Internship Thursdays featuring Indeed. This is the profile I shared with NUS:
Jiayee is a software engineer at Indeed. She graduated from NUS Computer Science in 2019 and joined Indeed as a fresh graduate. Before she joined Indeed, she had the opportunity to intern at various reputable companies such as SGInnovate, Visa and ViSenze. At Indeed, she gets the chance to learn from brilliant engineers in the company while indulging her passion for creating impact through technology.</description>
    </item>
    
    <item>
      <title>Cloudflare Workers</title>
      <link>https://jiayee.net/2020/09/cloudflare-workers/</link>
      <pubDate>Tue, 15 Sep 2020 21:31:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/cloudflare-workers/</guid>
      <description>It&amp;rsquo;s time to put my short custom domain to good use. Cloudflare Workers is a quick &amp;rsquo;n&amp;rsquo; dirty way for me to do URL forwarding. With URL forwarding, I will no longer need to set up DNS records or page rules. The former requires domain verification. Plus, social media websites don&amp;rsquo;t support custom domains (why will they). The latter costs money (the first 3 page rules are free).
My worker&amp;rsquo;s name was &amp;quot;vanity&amp;quot; for obvious reasons and it sits at https://www.</description>
    </item>
    
    <item>
      <title>Debugging Angular</title>
      <link>https://jiayee.net/2020/09/debugging-angular/</link>
      <pubDate>Mon, 14 Sep 2020 21:29:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/debugging-angular/</guid>
      <description>Something could&amp;rsquo;ve happened in the past 2 weeks while I focused on fixing my unit tests. It had been some time since I last did a local deployment. To my surprise, my local deployments in the recent days rendered a blank page with the following error in the JavaScript console:
Uncaught Error: [$injector:modulerr] Failed to instantiate module FormSG due to: Error: [$injector:modulerr] Failed to instantiate module forms due to: Error: [ng:areq] Argument &amp;#39;directiveFactory&amp;#39; is required My Google-fu was lacking.</description>
    </item>
    
    <item>
      <title>Jest for the First Time</title>
      <link>https://jiayee.net/2020/09/jest-for-the-first-time/</link>
      <pubDate>Sun, 13 Sep 2020 21:56:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/jest-for-the-first-time/</guid>
      <description>I needed to test a feature which I&amp;rsquo;ve been building for GovTech&amp;rsquo;s FormSG. To test it, I had to mock a function in the superclass of an instance generated by a factory method call. I once considered stripping away the barriers between the mock and the test. But, I didn&amp;rsquo;t want to refactor a codebase which I&amp;rsquo;m not too familiar with.
Below is a visualisation of the &amp;ldquo;barriers&amp;rdquo; between the mock and the test:</description>
    </item>
    
    <item>
      <title>Adding my sites to Cloudflare</title>
      <link>https://jiayee.net/2020/09/adding-my-sites-to-cloudflare/</link>
      <pubDate>Sun, 13 Sep 2020 11:34:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/adding-my-sites-to-cloudflare/</guid>
      <description>I added my domains to Cloudflare. Cloudflare offers many cool features that my domain providers don&amp;rsquo;t offer. Well, they didn&amp;rsquo;t need to offer those features. In Cloudflare, I get to see features such as:
Web traffic analytics Set up DNSSEC Configure network transport options and/or optimisations Run speed tests on my site Configure caching Run JavaScript workers Restrict image hotlinking This list is non-exhaustive. There are more features in the Pro and Enterprise subscriptions.</description>
    </item>
    
    <item>
      <title>Custom domains</title>
      <link>https://jiayee.net/2020/09/custom-domains/</link>
      <pubDate>Fri, 11 Sep 2020 01:10:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/custom-domains/</guid>
      <description>A few days ago, I purchased the jiayee.net domain. Yesterday, I purchased the jiay.ee domain. It was a novel experience for me. I last &amp;ldquo;purchased&amp;rdquo; a domain from Freenom about 3 years ago. Back then, I had the free domain point to my AWS EC2 public IP address (this was for CS3216). This week, my custom domains are pointing towards GitHub pages and Blogger respectively.
For GitHub pages, I followed a guide which is like this one by Rich.</description>
    </item>
    
    <item>
      <title>My first yarn package</title>
      <link>https://jiayee.net/2020/09/my-first-yarn-package/</link>
      <pubDate>Thu, 10 Sep 2020 23:59:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/my-first-yarn-package/</guid>
      <description>I wrote my first yarn package (kind of for fun) yesterday. It&amp;rsquo;s strange how I&amp;rsquo;ve been consuming packages but never went to the other side of the table: Writing a package. As of now, I haven&amp;rsquo;t published my package, but I&amp;rsquo;m omw. So, how did I create a package? It just felt like the usual&amp;hellip; I followed the yarn docs.
One difference (compared to my usual activities) was I couldn&amp;rsquo;t do import { .</description>
    </item>
    
    <item>
      <title>Almost done with the custom starter</title>
      <link>https://jiayee.net/2020/09/almost-done-with-the-custom-starter/</link>
      <pubDate>Wed, 09 Sep 2020 12:18:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/almost-done-with-the-custom-starter/</guid>
      <description>I was right. I forgot to enable the Mongo repository. And it wasn&amp;rsquo;t only that. I had two Mongo configuration classes. One in the consumer and another in the custom starter. I needed only one. I removed the configuration class from the custom starter. Then, I enabled the custom starter&amp;rsquo;s repository in the consumer&amp;rsquo;s configuration class. Below is an idea of how my configuration class looks like:
@EnableMongoRepositories(basePackages = { &amp;#34;yourTLD.</description>
    </item>
    
    <item>
      <title>Auto-configuring controllers and repositories</title>
      <link>https://jiayee.net/2020/09/auto-configuring-controllers-and-repositories/</link>
      <pubDate>Tue, 08 Sep 2020 21:01:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/auto-configuring-controllers-and-repositories/</guid>
      <description>I auto-configured Spring Boot REST controllers by adding their names to the spring.factories file. On the other hand, I didn&amp;rsquo;t have much luck with auto-configuring Mongo collections (yet).
I then ran the consumer&amp;rsquo;s codebase and used Postman to hit the newly-offered endpoints. Below is the response seen in Postman:
{ &amp;#34;error&amp;#34;: { &amp;#34;IllegalArgumentException&amp;#34;: &amp;#34;Couldn&amp;#39;t find PersistentEntity for type class yourTLD.yourOrg.yourProject.somePackage.SomeModel!&amp;#34; } } I thought the Mongo repository was not auto-configured, so I went to check the consumer&amp;rsquo;s logs.</description>
    </item>
    
    <item>
      <title>Spring Boot Auto-configuration</title>
      <link>https://jiayee.net/2020/09/spring-boot-auto-configuration/</link>
      <pubDate>Mon, 07 Sep 2020 20:22:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/spring-boot-auto-configuration/</guid>
      <description>Every time I use Spring Security, I have to copy and paste a lot of boilerplate code. What if I made the boilerplate code configurable? I decided to venture into this idea.
At first, I extracted only the method body which configures HttpSecurity. So I got myself something like a utility library. But this meant there was still some boilerplate code outside of the library. This approach required consumers to define their own configuration classes (annotated with @Configuration).</description>
    </item>
    
  </channel>
</rss>
