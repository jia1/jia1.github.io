<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jiayee.net</title>
    <link>https://jiayee.net/posts/</link>
    <description>Recent content in Posts on Jiayee.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Thu, 08 Oct 2020 22:36:00 +0800</lastBuildDate>
    
	<atom:link href="https://jiayee.net/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Redux Persist</title>
      <link>https://jiayee.net/2020/10/redux-persist/</link>
      <pubDate>Thu, 08 Oct 2020 22:36:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/redux-persist/</guid>
      <description>If you need your Redux store to last beyond a page load or refresh, look no further! redux-persist is here to the rescue. Based on this guide and this guide, you need to update your reducers and store to enjoy persistence:
Install redux-persist:
yarn add redux-persist @types/redux-persist Update root reducer and store:
// Copied from the official README and edited import { Provider } from &amp;#39;react-redux&amp;#39;; import { createStore, Store } from &amp;#39;redux&amp;#39;; import { persistReducer, persistStore } from &amp;#39;redux-persist&amp;#39;; import storage from &amp;#39;redux-persist/lib/storage&amp;#39;; import rootReducer from &amp;#39;.</description>
    </item>
    
    <item>
      <title>Polling</title>
      <link>https://jiayee.net/2020/10/polling/</link>
      <pubDate>Mon, 05 Oct 2020 23:00:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/polling/</guid>
      <description>There were instances where users filled up a time-consuming form but could not submit it because of reCaptcha failure. Users ended up having to refresh and re-populate the form. That&amp;rsquo;s some harsh user experience. My team uses a forked version of angular-recaptcha. I located the controller, directive and template for the form. I attached a recursive $timeout at the controller and the directive, but as of now, I have not gotten them to work.</description>
    </item>
    
    <item>
      <title>Calculator V2</title>
      <link>https://jiayee.net/2020/10/calculator-v2/</link>
      <pubDate>Sun, 04 Oct 2020 22:32:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/calculator-v2/</guid>
      <description>I made some changes to my compound interest calculator after reading up on &amp;ldquo;future value&amp;rdquo;. My calculator will allow users to specify regular deposits so that they can see for themselves the importance of every dollar added to their monthly or yearly savings and/or financial instruments.
import nerdamer from &amp;#39;nerdamer/nerdamer.core&amp;#39;; import Algebra from &amp;#39;nerdamer/Algebra&amp;#39;; import Calculus from &amp;#39;nerdamer/Calculus&amp;#39;; import Solve from &amp;#39;nerdamer/Solve&amp;#39;; const totalMonthsPerYear = 12; export const calcCompoundInterest = ({ principal, depositAmountPerMonth = 0, interestRatePerAnnum, compoundRatePerMonth = 1, totalMonths, }) =&amp;gt; { const totalAmount = solveForOneUnknownVariable( &amp;#39;a=(p*(1+(r/n))^(n*t))+(q*(((1+(r/n))^(n*t)-1)/(r/n)))&amp;#39;, { p: principal.</description>
    </item>
    
    <item>
      <title>Quick Go 3</title>
      <link>https://jiayee.net/2020/10/quick-go-3/</link>
      <pubDate>Thu, 01 Oct 2020 21:02:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/quick-go-3/</guid>
      <description>Chapter 5 and 6 were about basic data structures (like array, slice and map) and functions respectively.
package main import &amp;#34;fmt&amp;#34; func main() { // Chapter 5: Arrays, slices and maps  var x [5]int x[4] = 100 fmt.Println(x) // No coercing when there is a division operation involving a float64 and int  // i.e. (mismatched types float64 and int)  // Should do a / float64(b)  var total float64 = 0 for i, value := range x { total += value } // Different from Python&amp;#39;s range  // Compiler will complain &amp;#34;i declared and not used&amp;#34;, so we must rename unused variables to &amp;#39;_&amp;#39;  y := [3]float64{ 1, 2, 3, } // Slice of length 0  var z []float64 // Slice of length 5 but is associated with an array of length 10  a := make([]float64, 5, 10) b := x[0:5] c := x[:5] d := x[0:] e := x[:] slice := append(y, 8, 9) // [1, 2, 3, 8, 9]  dst := [1]float64{0} copy(slice, dst) // dst is now [1]  // min(len(slice), len(dst)) is copied over  var g map[string]int // {[key: string]: int}  g = make(map[string]int) // Or just g := make(map[string]int) without the variable declaration  g[&amp;#34;someKey&amp;#34;] = 0 // delete(g, &amp;#34;someKey&amp;#34;)  lookupResult, lookupSucceeded := g[&amp;#34;someKey&amp;#34;] if result, ok := g[&amp;#34;someKey&amp;#34;]; ok { fmt.</description>
    </item>
    
    <item>
      <title>Quick Go 2</title>
      <link>https://jiayee.net/2020/09/quick-go-2/</link>
      <pubDate>Wed, 30 Sep 2020 12:14:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/quick-go-2/</guid>
      <description>Chapter 3 and 4 were about variables (var, const and so on) and control structures (for, if and so on) respectively.
package main import &amp;#34;fmt&amp;#34; b := &amp;#34;Hello, world!&amp;#34; // Block scope  func main() { // Chapter 3: Variables  var x string = &amp;#34;Hello, world!&amp;#34; var y string y = &amp;#34;Hello, world!&amp;#34; // x = x + y  // x += y  z := &amp;#34;Hello, world!&amp;#34; var a = &amp;#34;Hello, world!</description>
    </item>
    
    <item>
      <title>Quick Go 1</title>
      <link>https://jiayee.net/2020/09/quick-go-1/</link>
      <pubDate>Mon, 28 Sep 2020 22:43:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/quick-go-1/</guid>
      <description>It was a very busy weekend for me. Last Saturday, I went out to catch up with my friends and I went to shop for an ebook reader. Last Sunday, I cycled with my in-laws and played computer games. On both days, I travelled by public transport so a couple of hours went into travelling too. Over the weekend, I also had to set up my ebook reader. In addition to my HumbleBundle books, I borrowed some books from NLB via OverDrive.</description>
    </item>
    
    <item>
      <title>Writing Calculators</title>
      <link>https://jiayee.net/2020/09/writing-calculators/</link>
      <pubDate>Fri, 25 Sep 2020 21:23:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/writing-calculators/</guid>
      <description>My friends needed an interest calculator. For the simple interest calculator, the parameters are the principal (P), annual interest rate (r), number of months (t) and an optional parameter to represent the periodic (monthly or yearly) top-up amount in addition to the principal (the initial top-up).
Here&amp;rsquo;s v1 of my simple interest calculator:
/** * Calculates simple interest. * * Uses the formula A = P(1 + rt). * * @param {Object} param Object containing parameters.</description>
    </item>
    
    <item>
      <title>Dynamic Tooltips</title>
      <link>https://jiayee.net/2020/09/dynamic-tooltips/</link>
      <pubDate>Fri, 25 Sep 2020 14:55:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/dynamic-tooltips/</guid>
      <description>I had a tooltip for a switch which contained 2 lines of text. The first line of the tooltip is an example on how the textarea field below the switch can be populated, like &amp;ldquo;e.g. example input here&amp;rdquo;. The second line reminds a user that certain prerequisites need to be fulfilled before the textarea field appears and is ready to receive input (hidden otherwise), like &amp;ldquo;You need to do X before you can populate this field&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Intercepting Angular Data Binding</title>
      <link>https://jiayee.net/2020/09/intercepting-angular-data-binding/</link>
      <pubDate>Wed, 23 Sep 2020 21:40:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/intercepting-angular-data-binding/</guid>
      <description>I have two form switches. Let&amp;rsquo;s call them A and B. I was tasked to program them such that:
 When A is off, B is disabled and off. When A is on, B is enabled but off.  We can safely ignore backend logic because I programmed it such that if A is off, B will be ignored.
So, how did I solve this? I intercepted the data binding with a directive.</description>
    </item>
    
    <item>
      <title>Data Wrangling</title>
      <link>https://jiayee.net/2020/09/data-wrangling/</link>
      <pubDate>Tue, 22 Sep 2020 21:14:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/data-wrangling/</guid>
      <description>I managed to catch one of NUS Hackers&amp;rsquo; workshops, &amp;ldquo;Hacker Tools: Data Wrangling&amp;rdquo; by Julius. I got to learn many new things since I don&amp;rsquo;t use CLI for text processing. Julius&amp;rsquo; slides can be found in his GitHub repo.
Below is a very brief and dry summary of what I think are more important to me. If I &amp;ldquo;miss&amp;rdquo; something out, it&amp;rsquo;s likely because I remembered it before. This summary does no justice to the workshop, but I want to write them down here before I forget.</description>
    </item>
    
    <item>
      <title>Style Fixes 1</title>
      <link>https://jiayee.net/2020/09/style-fixes-1/</link>
      <pubDate>Sun, 20 Sep 2020 16:26:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/style-fixes-1/</guid>
      <description>I realised there were some unexpected styles for &amp;lt;code&amp;gt; and &amp;lt;pre&amp;gt; in this site due to Foundation&amp;rsquo;s default styles. The inline code style was fine but the same style was applied to code blocks (i.e. &amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;...&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;) and that was not fine. There was also insufficient margin and padding for the code blocks. I went to inspect the &amp;lt;code&amp;gt; elements and found that Foundation was the one who has been styling the &amp;lt;code&amp;gt; elements on top of what Hugo has in store (see official docs for Syntax Highlighting).</description>
    </item>
    
    <item>
      <title>First Lighthouse Report for Jiayee.net</title>
      <link>https://jiayee.net/2020/09/first-lighthouse-report-for-jiayee.net/</link>
      <pubDate>Sat, 19 Sep 2020 18:34:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/first-lighthouse-report-for-jiayee.net/</guid>
      <description>I ran my first Lighthouse report on this site. There&amp;rsquo;s a bunch of improvements to make. As of now, I managed to resolve some of them. I put up the links to the before and after Lighthouse reports at the end of this post. Please feel free to take a look at them.
A summary of the improvements I made:
 Include lang attribute to the html element i.e. &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;.</description>
    </item>
    
    <item>
      <title>New Theme</title>
      <link>https://jiayee.net/2020/09/new-theme/</link>
      <pubDate>Sat, 19 Sep 2020 12:20:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/new-theme/</guid>
      <description>Hello to my new theme! Yesterday was Indeed&amp;rsquo;s &amp;ldquo;You Day&amp;rdquo; and I spent the day redesigning this site. I am extremely pleased with the result. I was able to follow my hand-drawn wireframe to produce this theme. While this is a simple theme, I made sure to take these things into consideration:
 Little clutter Consistent margin between sections (2rem between sections and 1rem between post metadata and content) Just 3 font sizes (Foundation&amp;rsquo;s h1, h3 and h5) Just 3 colours (background colour: #F5F5F5, font colour: #333333 and dark turquoise: #26867C) Reduction of eye strain with lower contrast of colours Colour-blind friendly  Through this experience, I gained more exposure to Hugo and Foundation.</description>
    </item>
    
    <item>
      <title>Internship Thursdays</title>
      <link>https://jiayee.net/2020/09/internship-thursdays/</link>
      <pubDate>Wed, 16 Sep 2020 21:52:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/internship-thursdays/</guid>
      <description>Last week, I had the honour to be one of the panellists for NUS CFG Internship Thursdays featuring Indeed. This is the profile I shared with NUS:
Jiayee is a software engineer at Indeed. She graduated from NUS Computer Science in 2019 and joined Indeed as a fresh graduate. Before she joined Indeed, she had the opportunity to intern at various reputable companies such as SGInnovate, Visa and ViSenze. At Indeed, she gets the chance to learn from brilliant engineers in the company while indulging her passion for creating impact through technology.</description>
    </item>
    
    <item>
      <title>Cloudflare Workers</title>
      <link>https://jiayee.net/2020/09/cloudflare-workers/</link>
      <pubDate>Tue, 15 Sep 2020 21:31:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/cloudflare-workers/</guid>
      <description>It&amp;rsquo;s time to put my short custom domain to good use. Cloudflare Workers is a quick &amp;lsquo;n&amp;rsquo; dirty way for me to do URL forwarding from various paths of jiay.ee without having to set up DNS records or page rules. The former requires domain verification. Plus, social media websites do not support custom domains (why will they). The latter costs money (the first 3 page rules are free).
My worker was named &amp;quot;vanity&amp;quot; for obvious reasons and it sits at https://www.</description>
    </item>
    
    <item>
      <title>Debugging Angular</title>
      <link>https://jiayee.net/2020/09/debugging-angular/</link>
      <pubDate>Mon, 14 Sep 2020 21:29:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/debugging-angular/</guid>
      <description>Something could&amp;rsquo;ve happened in the past 2 weeks while I was focused on fixing my unit tests. It had been some time since I last did a local deployment. To my surprise, my local deployments in the recent days rendered a blank page with the the following error in the JavaScript console:
Uncaught Error: [$injector:modulerr] Failed to instantiate module FormSG due to: Error: [$injector:modulerr] Failed to instantiate module forms due to: Error: [ng:areq] Argument &amp;#39;directiveFactory&amp;#39; is required I asked my teammate if he has seen this.</description>
    </item>
    
    <item>
      <title>Jest for the First Time</title>
      <link>https://jiayee.net/2020/09/jest-for-the-first-time/</link>
      <pubDate>Sun, 13 Sep 2020 21:56:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/jest-for-the-first-time/</guid>
      <description>To test a feature which I have been building for GovTech&amp;rsquo;s FormSG, I had to mock a function in the superclass of an instance which is generated by a factory method call. I once considered stripping away the unnecessary barriers between the mock and the test, but I didn&amp;rsquo;t want to refactor a codebase which I am not too familiar with.
Below is a visualisation of the &amp;ldquo;barriers&amp;rdquo; between the mock and the test:</description>
    </item>
    
    <item>
      <title>Adding my sites to Cloudflare</title>
      <link>https://jiayee.net/2020/09/adding-my-sites-to-cloudflare/</link>
      <pubDate>Sun, 13 Sep 2020 11:34:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/adding-my-sites-to-cloudflare/</guid>
      <description>I added my domains to Cloudflare. Cloudflare offers many cool features which my domain providers do not offer. Well, they did not need to offer those features. In Cloudflare, I get to see web traffic analytics, set up DNSSEC, configure network transport options and/or optimisations, run speed tests on my site, configure caching, run JavaScript workers and even restrict image hotlinking. This list is non-exhaustive. There are more features in the Pro and Enterprise subscriptions.</description>
    </item>
    
    <item>
      <title>Custom domains</title>
      <link>https://jiayee.net/2020/09/custom-domains/</link>
      <pubDate>Fri, 11 Sep 2020 01:10:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/custom-domains/</guid>
      <description>A few days ago, I purchased the jiayee.net domain. Yesterday, I purchased the jiay.ee domain. It was a novel experience for me. I last &amp;ldquo;purchased&amp;rdquo; a domain from Freenom about 3 years ago. Back then, I had the free domain point to my AWS EC2 public IP address (this was for CS3216). This week, my custom domains are pointing towards GitHub pages and Blogger respectively.
For GitHub pages, I followed a guide which is similar to this one by Rich.</description>
    </item>
    
    <item>
      <title>My first yarn package</title>
      <link>https://jiayee.net/2020/09/my-first-yarn-package/</link>
      <pubDate>Thu, 10 Sep 2020 23:59:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/my-first-yarn-package/</guid>
      <description>I wrote my first yarn package (kinda for fun) yesterday. It&amp;rsquo;s strange how I&amp;rsquo;ve been consuming packages for the past 2 years but never went to the other side of the table i.e. writing a package. As of now, I haven&amp;rsquo;t published my package but I&amp;rsquo;m omw. So, how did I create a package? It just felt like the usual&amp;hellip; I followed the yarn docs.
One difference (compared to my usual activities) was I couldn&amp;rsquo;t do import { .</description>
    </item>
    
  </channel>
</rss>