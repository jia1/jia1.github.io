<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on Jiayee.net</title>
    <link>https://jiayee.net/tags/javascript/</link>
    <description>Recent content in javascript on Jiayee.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Tue, 20 Oct 2020 15:25:00 +0800</lastBuildDate>
    
	<atom:link href="https://jiayee.net/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ready for review</title>
      <link>https://jiayee.net/tweets/ready-for-review/</link>
      <pubDate>Tue, 20 Oct 2020 15:25:00 +0800</pubDate>
      
      <guid>https://jiayee.net/tweets/ready-for-review/</guid>
      <description>I&amp;rsquo;m ready for review.</description>
    </item>
    
    <item>
      <title>Constants</title>
      <link>https://jiayee.net/2020/10/constants/</link>
      <pubDate>Mon, 19 Oct 2020 22:30:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/constants/</guid>
      <description>I thought consolidating constants was evil. Just two or three dozens of them were enough to become a huge headache for me. In Java, this practice is frowned upon. In JavaScript, it seemed alright.
The answer which received the bounty recommended the following:
// Warning: This answer was written in 2014. module.exports = Object.freeze({ MY_CONSTANT: &amp;#39;some value&amp;#39;, ANOTHER_CONSTANT: &amp;#39;another value&amp;#39; }); It was my first time encountering Object.freeze, so I went to google for the difference between Object.</description>
    </item>
    
    <item>
      <title>Javascript heap limit</title>
      <link>https://jiayee.net/2020/10/javascript-heap-limit/</link>
      <pubDate>Tue, 13 Oct 2020 19:11:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/javascript-heap-limit/</guid>
      <description>For the past week, I could not fathom why my diffs seemed to not be on hot reload. It turned out to be a JavaScript heap limit problem. As a result, the codebase did not rebuild and remained stale. This issue does not happen to everyone. I am using a MacBook Air (13-inch, 2017) with 8 GB of RAM.
Notice the line above the last which says, FATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory.</description>
    </item>
    
    <item>
      <title>redux-persist</title>
      <link>https://jiayee.net/2020/10/redux-persist/</link>
      <pubDate>Thu, 08 Oct 2020 22:36:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/redux-persist/</guid>
      <description>If you need your Redux store to last beyond a page load or refresh, look no further! redux-persist is here to the rescue. Based on this guide and this guide, you need to update your reducers and store to enjoy persistence:
Install redux-persist:
yarn add redux-persist @types/redux-persist Update root reducer and store:
// Copied from the official README and edited import { Provider } from &amp;#39;react-redux&amp;#39;; import { createStore, Store } from &amp;#39;redux&amp;#39;; import { persistReducer, persistStore } from &amp;#39;redux-persist&amp;#39;; import storage from &amp;#39;redux-persist/lib/storage&amp;#39;; import rootReducer from &amp;#39;.</description>
    </item>
    
    <item>
      <title>Challenges of a multi-step flow with permalinks</title>
      <link>https://jiayee.net/2020/10/challenges-of-a-multi-step-flow-with-permalinks/</link>
      <pubDate>Wed, 07 Oct 2020 22:50:28 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/challenges-of-a-multi-step-flow-with-permalinks/</guid>
      <description>I decided to invest my time into covering the edge cases that were not handled by Design #1. Refer to yesterday&amp;rsquo;s post for the context. The edge cases are:
 Forms which need data from the preceding forms Dynamic form links  I can deal with the first pain point by leveraging query parameters. A persistent Redux store is not needed (yet). A persistent Redux store is one which persists between page loads and refreshes.</description>
    </item>
    
    <item>
      <title>String.format equivalent in TypeScript</title>
      <link>https://jiayee.net/2020/10/string.format-equivalent-in-typescript/</link>
      <pubDate>Wed, 07 Oct 2020 22:50:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/string.format-equivalent-in-typescript/</guid>
      <description>While working on a problem during work, I thought I needed a way to do a String.format equivalent operation in TypeScript (it turns out I didn&amp;rsquo;t need to). I didn&amp;rsquo;t want to install Lodash (50 kB for _.template alone) or sprintf (40 kB), so I came up with the following:
// Warning: Untested code export const compileTemplate = (template: string, values: Map&amp;lt;string, string&amp;gt;) =&amp;gt; { const variables = Array.from(values.keys()).map(key =&amp;gt; &amp;#39;:&amp;#39; + key).</description>
    </item>
    
    <item>
      <title>Multi-step forms</title>
      <link>https://jiayee.net/2020/10/multi-step-forms/</link>
      <pubDate>Tue, 06 Oct 2020 21:48:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/multi-step-forms/</guid>
      <description>I have a few pages which I need to chain into a single form flow. I also need to display a progress bar at the top of each form. I need to do some rearchitecting. Reasons:
 If we do not do anything, we will need to insert &amp;lt;ProgressBar .../&amp;gt; and the like into every form component. Sharing the forms/pages across other flows which do not need to progress bar is difficult.</description>
    </item>
    
    <item>
      <title>Polling</title>
      <link>https://jiayee.net/2020/10/polling/</link>
      <pubDate>Mon, 05 Oct 2020 23:00:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/polling/</guid>
      <description>There were instances where users filled up a time-consuming form but could not submit it because of reCaptcha failure. Users ended up having to refresh and re-populate the form. That&amp;rsquo;s some harsh user experience. My team uses a forked version of angular-recaptcha. I located the controller, directive and template for the form. I attached a recursive $timeout at the controller and the directive, but as of now, I have not gotten them to work.</description>
    </item>
    
    <item>
      <title>Calculator V2</title>
      <link>https://jiayee.net/2020/10/calculator-v2/</link>
      <pubDate>Sun, 04 Oct 2020 22:32:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/calculator-v2/</guid>
      <description>I made some changes to my compound interest calculator after reading up on &amp;ldquo;future value&amp;rdquo;. My calculator will allow users to specify regular deposits. This is so that they can see for themselves the importance of every dollar added to their savings.
import nerdamer from &amp;#39;nerdamer/nerdamer.core&amp;#39;; import Algebra from &amp;#39;nerdamer/Algebra&amp;#39;; import Calculus from &amp;#39;nerdamer/Calculus&amp;#39;; import Solve from &amp;#39;nerdamer/Solve&amp;#39;; const totalMonthsPerYear = 12; export const calcCompoundInterest = ({ principal, depositAmountPerMonth = 0, interestRatePerAnnum, compoundRatePerMonth = 1, totalMonths, }) =&amp;gt; { const totalAmount = solveForOneUnknownVariable( &amp;#39;a=(p*(1+(r/n))^(n*t))+(q*(((1+(r/n))^(n*t)-1)/(r/n)))&amp;#39;, { p: principal.</description>
    </item>
    
    <item>
      <title>TypeScript Shortcuts</title>
      <link>https://jiayee.net/2020/10/typescript-shortcuts/</link>
      <pubDate>Thu, 01 Oct 2020 19:01:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/typescript-shortcuts/</guid>
      <description>TL;DR: I learnt how to (invert a map) and (copy a map and override the values of the copy) in TypeScript. Ctrl+F TYPESCRIPT_SHORTCUT_1 and TYPESCRIPT_SHORTCUT_2 to get to the code.
Context: Yesterday, I did not invest time into inverting a TypeScript Map&amp;lt;string, string&amp;gt;. Today, I received feedback that I should extract the encode logic into a function of its own. I decided to put in more effort.
Here&amp;rsquo;s the new original code:</description>
    </item>
    
    <item>
      <title>CryptoJS and URL</title>
      <link>https://jiayee.net/2020/09/cryptojs-and-url/</link>
      <pubDate>Wed, 30 Sep 2020 19:17:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/cryptojs-and-url/</guid>
      <description>Like this Stack Overflow thread, I needed to encrypt some string which will become part of a URL. However, there was a slash in one of the encrypted strings, like c3ViamVjdHM/X2Q9MQ==. Feel free to decode this. It&amp;rsquo;s something I copied from the internet.
I thought there would be a lot of symbols in the Base64 alphabet at first (I was wrong). I didn&amp;rsquo;t want to deal with them and set up a giant substitution map, like a Map&amp;lt;string, string&amp;gt;.</description>
    </item>
    
    <item>
      <title>Writing Calculators</title>
      <link>https://jiayee.net/2020/09/writing-calculators/</link>
      <pubDate>Fri, 25 Sep 2020 21:23:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/writing-calculators/</guid>
      <description>My friends needed an interest calculator. For the simple interest calculator, the parameters are:
 The principal (P), Annual interest rate (r), Number of months (t), and An optional parameter to represent a periodic top-up amount.  Here&amp;rsquo;s v1 of my simple interest calculator:
/** * Calculates simple interest. * * Uses the formula A = P(1 + rt). * * @param {Object} param Object containing parameters. * @param {Number} param.</description>
    </item>
    
    <item>
      <title>Dynamic Tooltips</title>
      <link>https://jiayee.net/2020/09/dynamic-tooltips/</link>
      <pubDate>Fri, 25 Sep 2020 14:55:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/dynamic-tooltips/</guid>
      <description>I had a tooltip for a switch which contained 2 lines of text. The first line of the tooltip shows how users can fill the textarea field nearby. The second line reminds users to meet certain prerequisites before filling the field. My GovTech OSS buddy suggested shortening the tooltip depending on user interaction.
At first, the tooltip looked like:
&amp;lt;i class=&amp;#34;...&amp;#34; uib-tooltip=&amp;#34;Here&amp;#39;s the one and only static tooltip!&amp;#34; tooltip-trigger=&amp;#34;&amp;#39;click mouseenter&amp;#39;&amp;#34; &amp;gt;&amp;lt;/i&amp;gt; uib-tooltip seems to come from UI Bootstrap.</description>
    </item>
    
    <item>
      <title>Intercepting Angular Data Binding</title>
      <link>https://jiayee.net/2020/09/intercepting-angular-data-binding/</link>
      <pubDate>Wed, 23 Sep 2020 21:40:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/intercepting-angular-data-binding/</guid>
      <description>I have two form switches. Let&amp;rsquo;s call them A and B. I had to program them such that:
 When A is off, disable and switch B off. When A is on, disable and switch B off.  We can ignore backend logic because I programmed it such that if A is off, ignore B.
So, how did I solve this? I intercepted the data binding with a directive. This may not be the best solution, but it was so convenient and intuitive to me!</description>
    </item>
    
    <item>
      <title>Debugging Angular</title>
      <link>https://jiayee.net/2020/09/debugging-angular/</link>
      <pubDate>Mon, 14 Sep 2020 21:29:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/debugging-angular/</guid>
      <description>Something could&amp;rsquo;ve happened in the past 2 weeks while I focused on fixing my unit tests. It had been some time since I last did a local deployment. To my surprise, my local deployments in the recent days rendered a blank page with the following error in the JavaScript console:
Uncaught Error: [$injector:modulerr] Failed to instantiate module FormSG due to: Error: [$injector:modulerr] Failed to instantiate module forms due to: Error: [ng:areq] Argument &amp;#39;directiveFactory&amp;#39; is required My Google-fu was lacking.</description>
    </item>
    
    <item>
      <title>Rule: no-var-requires</title>
      <link>https://jiayee.net/tweets/no-var-requires/</link>
      <pubDate>Sun, 13 Sep 2020 22:12:00 +0800</pubDate>
      
      <guid>https://jiayee.net/tweets/no-var-requires/</guid>
      <description>My pre-commit hook complained because the original code had an import that looked like var module = require(&amp;quot;module&amp;quot;). The permitted ways to import are: import foo = require(&#39;foo&#39;) and &amp;ldquo;ES2015-style imports&amp;rdquo; which (I think) is defined in this part of the MDN web docs. I wonder when this rule was inserted&amp;hellip;</description>
    </item>
    
    <item>
      <title>Jest for the First Time</title>
      <link>https://jiayee.net/2020/09/jest-for-the-first-time/</link>
      <pubDate>Sun, 13 Sep 2020 21:56:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/jest-for-the-first-time/</guid>
      <description>I needed to test a feature which I have been building for GovTech&amp;rsquo;s FormSG. To test it, I had to mock a function in the superclass of an instance generated by a factory method call. I once considered stripping away the barriers between the mock and the test. But, I didn&amp;rsquo;t want to refactor a codebase which I am not too familiar with.
Below is a visualisation of the &amp;ldquo;barriers&amp;rdquo; between the mock and the test:</description>
    </item>
    
    <item>
      <title>My first yarn package</title>
      <link>https://jiayee.net/2020/09/my-first-yarn-package/</link>
      <pubDate>Thu, 10 Sep 2020 23:59:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/my-first-yarn-package/</guid>
      <description>I wrote my first yarn package (kind of for fun) yesterday. It&amp;rsquo;s strange how I&amp;rsquo;ve been consuming packages but never went to the other side of the table: Writing a package. As of now, I haven&amp;rsquo;t published my package, but I&amp;rsquo;m omw. So, how did I create a package? It just felt like the usual&amp;hellip; I followed the yarn docs.
One difference (compared to my usual activities) was I couldn&amp;rsquo;t do import { .</description>
    </item>
    
  </channel>
</rss>