<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>reach on Jiayee.net</title>
    <link>https://jiayee.net/tags/reach/</link>
    <description>Recent content in reach on Jiayee.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Fri, 04 Dec 2020 21:10:00 +0800</lastBuildDate><atom:link href="https://jiayee.net/tags/reach/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reach Router Match</title>
      <link>https://jiayee.net/2020/12/reach-router-match/</link>
      <pubDate>Fri, 04 Dec 2020 21:10:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/12/reach-router-match/</guid>
      <description>I use Reach Router. I&amp;rsquo;ve a component which isn&amp;rsquo;t a child of Router, so it does not have the useLocation hook. But I need to access the current URL in that component. Here&amp;rsquo;s how I did it after seeing Jacek&amp;rsquo;s hint:
&amp;lt;div&amp;gt; &amp;lt;Match path=&amp;#34;/*&amp;#34;&amp;gt; {(props) =&amp;gt; ( &amp;lt;MyComponent path=&amp;#34;/*&amp;#34; match={props.match ?? &amp;#39;&amp;#39;} /&amp;gt; )} &amp;lt;/Match&amp;gt; &amp;lt;Router&amp;gt; ... &amp;lt;/Router&amp;gt; &amp;lt;/div&amp;gt; interface Props { match: any; } export const MyComponent: FC&amp;lt;Props&amp;gt; = (props: Props) =&amp;gt; { const pathname = props.</description>
    </item>
    
  </channel>
</rss>
