<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>react on Jiayee.net</title>
    <link>https://jiayee.net/tags/react/</link>
    <description>Recent content in react on Jiayee.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sun, 26 Mar 2023 21:06:00 +0800</lastBuildDate><atom:link href="https://jiayee.net/tags/react/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reuse Stories When Testing</title>
      <link>https://jiayee.net/2023/03/reuse-stories-when-testing/</link>
      <pubDate>Sun, 26 Mar 2023 21:06:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2023/03/reuse-stories-when-testing/</guid>
      <description>My volunteering experience at an open source project led me to appreciate Storybook. Developing frontend components in isolation makes me happy. Unexpected behaviour is localised, and you are appropriately enticed to write your components better. By better, I meant modular. Modularity encourages simplicity (think SRP), and this makes code more reusable and self-documenting. There&amp;rsquo;s no greater joy than not having to explain your code.
But wait, there&amp;rsquo;s more: If you think writing stories is exclusive to your Storybook instance and thus a pain to write, think again.</description>
    </item>
    
    <item>
      <title>react-hook-form</title>
      <link>https://jiayee.net/2023/03/react-hook-form/</link>
      <pubDate>Sat, 25 Mar 2023 12:35:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2023/03/react-hook-form/</guid>
      <description>It&amp;rsquo;s been a while since I last had the chance to assess several libraries to solve parts of a problem. My most recent project required me to evaluate JavaScript libraries which make form management a breeze. The &amp;ldquo;me&amp;rdquo; in the past would have jumped at any first possibility, like how a chick imprints on the first living thing they see. Not anymore.
My ex-company taught me to set up decision tables and make recommendations according to concrete criteria and their priorities.</description>
    </item>
    
    <item>
      <title>Core React Training Day 2</title>
      <link>https://jiayee.net/2022/04/core-react-training-day-2/</link>
      <pubDate>Wed, 27 Apr 2022 22:00:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2022/04/core-react-training-day-2/</guid>
      <description>Day 2 was a continuation of our understanding of the useEffect hook. Some of concepts mentioned were concepts I &amp;ldquo;felt&amp;rdquo; while getting my hands dirty. The workshop was a conducive environment to make these concepts known to me more.
Some keywords, libraries or links of interest: usehooks-ts eslint-plugin-react-hooks React lifecycle diagrams The dependency array in useEffect does diffs by identity. For primitives, we diff by value. For objects, we diff by memory location.</description>
    </item>
    
    <item>
      <title>Core React Training Day 1</title>
      <link>https://jiayee.net/2022/04/core-react-training-day-1/</link>
      <pubDate>Tue, 26 Apr 2022 21:10:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2022/04/core-react-training-day-1/</guid>
      <description>I am thankful to be able to attend a React training workshop organised by my company. I have been using React in my job but this workshop made me realise I still have lots to learn.
The exercises were very manageable. I learnt the most from the instructor&amp;rsquo;s detailed explanation of how React works:
Babel is not part of React but it was helpful to know how Babel makes our lives easier by parsing JSX.</description>
    </item>
    
    <item>
      <title>Reach Router Match</title>
      <link>https://jiayee.net/2020/12/reach-router-match/</link>
      <pubDate>Fri, 04 Dec 2020 21:10:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/12/reach-router-match/</guid>
      <description>I use Reach Router. I have a component which isn&amp;rsquo;t a child of Router, so it does not have the useLocation hook. But I need to access the current URL in that component. Here&amp;rsquo;s how I did it after seeing Jacek&amp;rsquo;s hint:
&amp;lt;div&amp;gt; &amp;lt;Match path=&amp;#34;/*&amp;#34;&amp;gt; {(props) =&amp;gt; ( &amp;lt;MyComponent path=&amp;#34;/*&amp;#34; match={props.match ?? &amp;#39;&amp;#39;} /&amp;gt; )} &amp;lt;/Match&amp;gt; &amp;lt;Router&amp;gt; ... &amp;lt;/Router&amp;gt; &amp;lt;/div&amp;gt; interface Props { match: any; } export const MyComponent: FC&amp;lt;Props&amp;gt; = (props: Props) =&amp;gt; { const pathname = props.</description>
    </item>
    
    <item>
      <title>Need an extra whitespace?</title>
      <link>https://jiayee.net/tweets/need-an-extra-whitespace/</link>
      <pubDate>Thu, 15 Oct 2020 19:16:00 +0800</pubDate>
      
      <guid>https://jiayee.net/tweets/need-an-extra-whitespace/</guid>
      <description>Need an extra whitespace in JSX? Instead of &amp;amp;nbsp;, try this:
&amp;lt;span&amp;gt;Hello, &amp;lt;/span&amp;gt; {true ? &amp;#39;world!&amp;#39; : &amp;#39;world!&amp;#39;} Some food for thought here.</description>
    </item>
    
    <item>
      <title>Challenges of a multi-step flow with permalinks</title>
      <link>https://jiayee.net/2020/10/challenges-of-a-multi-step-flow-with-permalinks/</link>
      <pubDate>Wed, 07 Oct 2020 22:50:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/challenges-of-a-multi-step-flow-with-permalinks/</guid>
      <description>I decided to invest my time into covering the edge cases that were not handled by Design #1. Refer to yesterday&amp;rsquo;s post for the context. The edge cases are:
Forms which need data from the preceding forms Dynamic form links I can deal with the first pain point by leveraging query parameters. A persistent Redux store is not needed (yet). A persistent Redux store is one which persists between page loads and refreshes.</description>
    </item>
    
    <item>
      <title>Multi-step forms</title>
      <link>https://jiayee.net/2020/10/multi-step-forms/</link>
      <pubDate>Tue, 06 Oct 2020 21:48:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/multi-step-forms/</guid>
      <description>I have a few pages which I need to chain into a single form flow. I also need to display a progress bar at the top of each form. I need to do some rearchitecting. Reasons:
If we do not do anything, we will need to insert &amp;lt;ProgressBar .../&amp;gt; and the like into every form component. Sharing the forms/pages across other flows which do not need to progress bar is difficult.</description>
    </item>
    
  </channel>
</rss>
