<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>testing on Jiayee.net</title>
    <link>https://jiayee.net/tags/testing/</link>
    <description>Recent content in testing on Jiayee.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sun, 26 Mar 2023 21:06:00 +0800</lastBuildDate><atom:link href="https://jiayee.net/tags/testing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reuse Stories When Testing</title>
      <link>https://jiayee.net/2023/03/reuse-stories-when-testing/</link>
      <pubDate>Sun, 26 Mar 2023 21:06:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2023/03/reuse-stories-when-testing/</guid>
      <description>My volunteering experience at an open source project led me to appreciate Storybook. Developing frontend components in isolation makes me happy. Unexpected behaviour is localised, and you are appropriately enticed to write your components better. By better, I meant modular. Modularity encourages simplicity (think SRP), and this makes code more reusable and self-documenting. There&amp;rsquo;s no greater joy than not having to explain your code.
But wait, there&amp;rsquo;s more: If you think writing stories is exclusive to your Storybook instance and thus a pain to write, think again.</description>
    </item>
    
    <item>
      <title>Jest for the First Time</title>
      <link>https://jiayee.net/2020/09/jest-for-the-first-time/</link>
      <pubDate>Sun, 13 Sep 2020 21:56:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/jest-for-the-first-time/</guid>
      <description>I needed to test a feature which I have been building for GovTech&amp;rsquo;s FormSG. To test it, I had to mock a function in the superclass of an instance generated by a factory method call. I once considered stripping away the barriers between the mock and the test. But, I didn&amp;rsquo;t want to refactor a codebase which I am not too familiar with.
Below is a visualisation of the &amp;ldquo;barriers&amp;rdquo; between the mock and the test:</description>
    </item>
    
  </channel>
</rss>
