<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>web on Jiayee.net</title>
    <link>https://jiayee.net/tags/web/</link>
    <description>Recent content in web on Jiayee.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Thu, 08 Oct 2020 22:36:00 +0800</lastBuildDate>
    
	<atom:link href="https://jiayee.net/tags/web/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>redux-persist</title>
      <link>https://jiayee.net/2020/10/redux-persist/</link>
      <pubDate>Thu, 08 Oct 2020 22:36:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/redux-persist/</guid>
      <description>If you need your Redux store to last beyond a page load or refresh, look no further! redux-persist is here to the rescue. Based on this guide and this guide, you need to update your reducers and store to enjoy persistence:
Install redux-persist:
yarn add redux-persist @types/redux-persist Update root reducer and store:
// Copied from the official README and edited import { Provider } from &amp;#39;react-redux&amp;#39;; import { createStore, Store } from &amp;#39;redux&amp;#39;; import { persistReducer, persistStore } from &amp;#39;redux-persist&amp;#39;; import storage from &amp;#39;redux-persist/lib/storage&amp;#39;; import rootReducer from &amp;#39;.</description>
    </item>
    
    <item>
      <title>Polling</title>
      <link>https://jiayee.net/2020/10/polling/</link>
      <pubDate>Mon, 05 Oct 2020 23:00:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/10/polling/</guid>
      <description>There were instances where users filled up a time-consuming form but could not submit it because of reCaptcha failure. Users ended up having to refresh and re-populate the form. That&amp;rsquo;s some harsh user experience. My team uses a forked version of angular-recaptcha. I located the controller, directive and template for the form. I attached a recursive $timeout at the controller and the directive, but as of now, I have not gotten them to work.</description>
    </item>
    
    <item>
      <title>Dynamic Tooltips</title>
      <link>https://jiayee.net/2020/09/dynamic-tooltips/</link>
      <pubDate>Fri, 25 Sep 2020 14:55:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/dynamic-tooltips/</guid>
      <description>I had a tooltip for a switch which contained 2 lines of text. The first line of the tooltip is an example on how the textarea field below the switch can be populated, like &amp;ldquo;e.g. example input here&amp;rdquo;. The second line reminds a user that certain prerequisites need to be fulfilled before the textarea field appears and is ready to receive input (hidden otherwise), like &amp;ldquo;You need to do X before you can populate this field&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Intercepting Angular Data Binding</title>
      <link>https://jiayee.net/2020/09/intercepting-angular-data-binding/</link>
      <pubDate>Wed, 23 Sep 2020 21:40:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/intercepting-angular-data-binding/</guid>
      <description>I have two form switches. Let&amp;rsquo;s call them A and B. I was tasked to program them such that:
 When A is off, B is disabled and off. When A is on, B is enabled but off.  We can safely ignore backend logic because I programmed it such that if A is off, B will be ignored.
So, how did I solve this? I intercepted the data binding with a directive.</description>
    </item>
    
    <item>
      <title>Rendering newlines in HTML attributes</title>
      <link>https://jiayee.net/tweets/rendering-newlines-in-html-attributes/</link>
      <pubDate>Mon, 21 Sep 2020 22:41:00 +0800</pubDate>
      
      <guid>https://jiayee.net/tweets/rendering-newlines-in-html-attributes/</guid>
      <description>Doing
&amp;lt;textarea placeholder=&amp;#34;line1\nline2&amp;#34;&amp;gt; will not work, but doing
&amp;lt;textarea placeholder=&amp;#34;{{ somethingFromScope }}&amp;#34;&amp;gt; where somethingFromScope is line1\nline2 will work as expected!</description>
    </item>
    
    <item>
      <title>Style Fixes 1</title>
      <link>https://jiayee.net/2020/09/style-fixes-1/</link>
      <pubDate>Sun, 20 Sep 2020 16:26:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/style-fixes-1/</guid>
      <description>I realised there were some unexpected styles for &amp;lt;code&amp;gt; and &amp;lt;pre&amp;gt; in this site due to Foundation&amp;rsquo;s default styles. The inline code style was fine but the same style was applied to code blocks (i.e. &amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;...&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;) and that was not fine. There was also insufficient margin and padding for the code blocks. I went to inspect the &amp;lt;code&amp;gt; elements and found that Foundation was the one who has been styling the &amp;lt;code&amp;gt; elements on top of what Hugo has in store (see official docs for Syntax Highlighting).</description>
    </item>
    
    <item>
      <title>First Lighthouse Report for Jiayee.net</title>
      <link>https://jiayee.net/2020/09/first-lighthouse-report-for-jiayee.net/</link>
      <pubDate>Sat, 19 Sep 2020 18:34:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/first-lighthouse-report-for-jiayee.net/</guid>
      <description>I ran my first Lighthouse report on this site. There&amp;rsquo;s a bunch of improvements to make. As of now, I managed to resolve some of them. I put up the links to the before and after Lighthouse reports at the end of this post. Please feel free to take a look at them.
A summary of the improvements I made:
 Include lang attribute to the html element i.e. &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;.</description>
    </item>
    
    <item>
      <title>Debugging Angular</title>
      <link>https://jiayee.net/2020/09/debugging-angular/</link>
      <pubDate>Mon, 14 Sep 2020 21:29:00 +0800</pubDate>
      
      <guid>https://jiayee.net/2020/09/debugging-angular/</guid>
      <description>Something could&amp;rsquo;ve happened in the past 2 weeks while I was focused on fixing my unit tests. It had been some time since I last did a local deployment. To my surprise, my local deployments in the recent days rendered a blank page with the the following error in the JavaScript console:
Uncaught Error: [$injector:modulerr] Failed to instantiate module FormSG due to: Error: [$injector:modulerr] Failed to instantiate module forms due to: Error: [ng:areq] Argument &amp;#39;directiveFactory&amp;#39; is required I asked my teammate if he has seen this.</description>
    </item>
    
  </channel>
</rss>